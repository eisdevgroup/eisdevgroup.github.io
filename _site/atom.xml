<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>EIS Development Team Blog</title>
 <link href="/" rel="self"/>
 <link href=""/>
 <updated>2014-09-02T11:55:55+04:00</updated>
 <id></id>
 <author>
   <name>EIS devteam</name>
   <email>devteam.eis@gmail.com</email>
 </author>

 
 <entry>
   <title>AzureJay update</title>
   <link href="/play%20framework/2014/09/02/azurejay-update"/>
   <updated>2014-09-02T00:00:00+04:00</updated>
   <id>/play%20framework/2014/09/02/azurejay-update</id>
   <content type="html">
&lt;h2 id=&quot;azurejay&quot;&gt;Обновление AzureJay&lt;/h2&gt;

&lt;p&gt;Вышло обновление библиотеки для интеграции web-приложений на базе PlayFramework и MSAzure Mobile Services.&lt;/p&gt;

&lt;p&gt;Обновление включает поддержку новых версий PlayFramework (семейство &lt;em&gt;2.3.x&lt;/em&gt;), а также поддержку Scala &lt;em&gt;2.11.1&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Для обновления версии Вам необходимо изменить версию AzureJay на &lt;em&gt;0.1.1&lt;/em&gt; и убедиться, что приложение имеет библиотеку &lt;em&gt;play-ws&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Подробнее о библиотеке и методах работы с ней можно прочитать в &lt;a href=&quot;https://github.com/eisdevgroup/AzureJay&quot;&gt;описании репозитория&lt;/a&gt;.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>xUnit test reports for sbt</title>
   <link href="/code%20quality/2014/07/21/xunit-test-reports"/>
   <updated>2014-07-21T00:00:00+04:00</updated>
   <id>/code%20quality/2014/07/21/xunit-test-reports</id>
   <content type="html">
&lt;h2 id=&quot;xunit&quot;&gt;Отчеты о прохождении тестов в формате xUnit&lt;/h2&gt;

&lt;h3 id=&quot;jenkins&quot;&gt;Отчеты и Jenkins&lt;/h3&gt;

&lt;p&gt;Для Jenkins существует &lt;a href=&quot;https://wiki.jenkins-ci.org/display/JENKINS/xUnit+Plugin&quot;&gt;плагин&lt;/a&gt;, разбирающий отчеты в формает xUnit. XML-отчет преобразуется в таблицу соответствия тестов и результатов.
Кроме того плагин позволяет отследить динамику прохождения тестов и их количества в виде графиков и таблицы на странице задачи Jenkins (сколько тестов добавлено в последней сборке, сколько тестов сломалось за последний месяц,…).
Визуализация отчетов позволяет быстрее локализовать место возможной ошибки и исправить ее (или тест).&lt;/p&gt;

&lt;h3 id=&quot;xunit--playframework&quot;&gt;xUnit и PlayFramework&lt;/h3&gt;

&lt;p&gt;К сожалению при настройках по умолчанию при прохождении тестов в PlayFramework xUnit отчет не создается, а формат отчета не совпадает с xUnit. В официальной документации на сайте информации о создании подобных отчетов нет.&lt;/p&gt;

&lt;p&gt;Однако, в действительности, отчет в формате xUnit создать можно. Как оказалось эта возможность заложена в sbt.
Для создания отчетов необходимо добавить следующий ключ в скрипт сборки в &lt;em&gt;Build.scala&lt;/em&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;testOptions in Test += Tests.Argument(&quot;junitxml&quot;, &quot;console&quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;При следующем выполнении команды &lt;em&gt;sbt test&lt;/em&gt; будет создан файл отчета в папке &lt;em&gt;$PROJECT/target/test-reports&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Остается установить плагин для Jenkins и добавть послесборочный шаг публикации отчетов JUnit.&lt;/p&gt;

&lt;h3 id=&quot;xunit--jacoco&quot;&gt;xUnit и Jacoco&lt;/h3&gt;

&lt;p&gt;Если Вы используете jacoco4sbt для сборки статистики покрытия тестов, то обнаружите, что XML отчет не формируется при запуске команд &lt;em&gt;jacoco:test&lt;/em&gt; или &lt;em&gt;jacoco:cover&lt;/em&gt;.
Проблема решается также просто:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Необходимо добавить в зависимости проекта библиотеку &lt;em&gt;junit-interface&lt;/em&gt;. Эта же библиотека используется для генерации отчетов xUnit в PlayFramework&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;junitInterface&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;com.novocode&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;junit-interface&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;0.10&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;test&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// Add to play project dependencies config&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;appDependencies&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Seq&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;junitInterface&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Необходимо добавить ключ в конфигурацию сборки в &lt;em&gt;Build.scala&lt;/em&gt;:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;span class=&quot;n&quot;&gt;testOptions&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jacoco&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Config&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Tests&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Argument&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;junitxml&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;console&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;После перезагрузки описания проекта при выполнении команд &lt;em&gt;jacoco:test&lt;/em&gt; или &lt;em&gt;jacoco:cover&lt;/em&gt; Вы получите отчета в папке &lt;em&gt;$PROJECT/target/test-reports&lt;/em&gt;.&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;Ссылки&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://wiki.jenkins-ci.org/display/JENKINS/xUnit+Plugin&quot;&gt;xUnit plugin&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/sbt/junit-interface&quot;&gt;jUnit interface&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>AzureJay</title>
   <link href="/play%20framework/2014/07/04/azurejay"/>
   <updated>2014-07-04T00:00:00+04:00</updated>
   <id>/play%20framework/2014/07/04/azurejay</id>
   <content type="html">
&lt;p&gt;Сегодня в нашем репозитории на Github появился наш первый проект с открытым исходным кодом!&lt;/p&gt;

&lt;p&gt;Проект представляет собой дополнение для PlayFramework 2, предназначенное для связи серверного приложения и мобильной службы MS Azure.
Библиотека пока очень маленькая и содержит большое количество ограничений, но бы обещаем развивать ее.&lt;/p&gt;

&lt;p&gt;Подробнее Вы можете ознакомиться с проектом &lt;a href=&quot;https://github.com/eisdevgroup/AzureJay&quot;&gt;здесь&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Play with P-JAX</title>
   <link href="/play%20framework/2014/06/17/play-with-pjax"/>
   <updated>2014-06-17T00:00:00+04:00</updated>
   <id>/play%20framework/2014/06/17/play-with-pjax</id>
   <content type="html">
&lt;h2 id=&quot;p-jax&quot;&gt;P-JAX&lt;/h2&gt;

&lt;h3 id=&quot;p-jax-1&quot;&gt;Что такое P-JAX.&lt;/h3&gt;

&lt;p&gt;P-JAX представляет собой плагин для jQuery, позволяющий перезагружать участок web-страницы и при этом изменять состояние адресной строки браузера и историю посещения страниц.
Проект открытый, исходный код доступен &lt;a href=&quot;https://github.com/defunkt/jquery-pjax&quot;&gt;на GitHub&lt;/a&gt;. Также доступно приложение, чтобы потестировать плагин, &lt;a href=&quot;http://pjax.heroku.com&quot;&gt;на Heroku&lt;/a&gt;.
P-JAX используется самим GitHub.&lt;/p&gt;

&lt;h3 id=&quot;p-jax-2&quot;&gt;Как работает P-JAX&lt;/h3&gt;

&lt;p&gt;Название представляет собой объединенные 2 термина: PushState и AJAX.
Магия технологии заключается в следующем:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;При нажатии на ссылку, для которой включен P-JAX, отпраляется AJAX запрос на сервер с указанием заголовка &lt;em&gt;X-PJAX: true&lt;/em&gt;.&lt;/li&gt;
  &lt;li&gt;В это время значение в адресной строке браузера меняется на адрес в P-JAX-ссылке, а в истории посещений добавляется новая строка.&lt;/li&gt;
  &lt;li&gt;После получения данных от сервера, P-JAX вырезает указанный участок web-страницы и вставляет туда участок полученный от сервера.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Такой подход позволяет существенно сократить время загрузки и отрисовки страницы.
Минусом является необходимость обработки дополнительного заголовка на стороне сервера, чтобы определить передавать ли клиенту страницу целиком или только ее участок.&lt;/p&gt;

&lt;h2 id=&quot;play-&quot;&gt;Интеграция в Play-приложение&lt;/h2&gt;

&lt;h3 id=&quot;p-jax--&quot;&gt;Подключаем P-JAX на страницу&lt;/h3&gt;

&lt;p&gt;Для подключения надстройки потребуется добавить jQuery и сам P-JAX&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;@controllers.routes.Assets.at(&amp;quot;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;javascripts&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;jquery&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;pjax&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;js&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;quot;)&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Далее необходимо настроить P-JAX, для этого добавим скрипт:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pjax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;a[data-pjax=&amp;quot;&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;]&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;#pjax-container&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;timeout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Теперь все ссылки с атрибутом &lt;em&gt;data-pjax=”true”&lt;/em&gt; будут перезагружать содержимое элемента с id &lt;em&gt;pjax-container&lt;/em&gt;.
Теперь необходимо позаботиться о формах. Для этого добавим следующее:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;submit&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;form&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pjax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;submit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;#pjax-container&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;timeout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;p-jax---1&quot;&gt;Обрабатываем P-JAX на сервере&lt;/h3&gt;

&lt;p&gt;На сервере необходимо разобрать запрос и получить значение заголовка &lt;em&gt;X-PJAX&lt;/em&gt; и, в зависимости от него, отправить HTML-представление целиком или частично.
Для этого можно использовать следующий метод&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;span class=&quot;k&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;PjaxController&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Controller&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

      &lt;span class=&quot;k&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pjaxHeader&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;X-PJAX&amp;quot;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;defaultValue&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;false&amp;quot;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pjaxUrlHeader&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;X-PJAX-URL&amp;quot;&lt;/span&gt;

      &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;status&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;EssentialAction&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Action&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;implicit&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;renderFullView&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;toSimpleMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getOrElse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pjaxHeader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;defaultValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;toBoolean&lt;/span&gt;
          &lt;span class=&quot;nc&quot;&gt;Ok&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;renderFullView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;В файл с базовым шаблоном (&lt;em&gt;layout&lt;/em&gt;) необходимо поместить код управления отрисовкой статической части:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;span class=&quot;o&quot;&gt;@(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;renderFullView&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Boolean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Html&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;implicit&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;RequestHeader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;renderFullView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;&amp;lt;!&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;DOCTYPE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;&amp;lt;!--&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;full&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;page&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nd&quot;&gt;@content&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;&amp;lt;!--&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;part&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;view&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nd&quot;&gt;@content&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Из представления необходимо передать параметр отрисовки в базовый шаблон.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;span class=&quot;o&quot;&gt;@(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;renderFullView&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Boolean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@views&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;renderFullView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;&amp;lt;!--&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;content&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;will&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;be&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;here&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.--&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;section&quot;&gt;Подводные камни&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Redirects&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;По умолчанию P-JAX не будет менять адрес в адресной строке при перенаправлении. Для изменения значения необходимо явно указать какой URL необходимо вставить в адресную строку.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;span class=&quot;n&quot;&gt;pjax_s&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;toSimpleMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getOrElse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pjaxHeader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;defaultValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;Redirect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;withHeaders&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pjaxHeader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pjax_s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pjaxUrlHeader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;uri&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Подтверждение оперции&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Если Вы хотите сделать диалог подтверждения, например при удалении элемента, необходимо воспользоваться событием &lt;em&gt;pjax:beforeSend&lt;/em&gt; и перехватить событие отправки запроса:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;pjax:beforeSend&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;relatedTarget&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;preventDefault&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stopImmediatePropagation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// do something useful&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;JavaScript&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;При работе с JavaScript и P-JAX необходимо помнить, что фактически страница, с которой мы работаем одна. Весь JavaScript, единожды загруженный, будет храниться в памяти и выполняться.
При этом могут возникать ошибки, связанные с повторной загрузкой скриптов или повторной привязкой событий, например &lt;em&gt;onClick&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Также необходимо помнить о дублировании кода инициализации событий при загрузке страницы и при срабатывании &lt;em&gt;pjax:complete&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Работа с формами&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;При возврате ошибок в заполнении формы от сервера клиенту использование HTT-кодов ответов, отличных от 200-ой серии, опасно. По умолчанию такие ответы будут попадать в &lt;em&gt;error&lt;/em&gt;-callback методов P-JAX и не будут приводить к перерисовке области.
Решением может служить использование &lt;em&gt;OK&lt;/em&gt; вместо &lt;em&gt;BadRequest&lt;/em&gt; (хотя в примерах PlayFramework используется второе).&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;Выводы&lt;/h3&gt;

&lt;p&gt;Хотя P-JAX не очень распространен в сети, его использование позволяет существенно ускорить загрузку страниц Вашего web-приложения и тем самым улучшить UX.
Для сравнения у нас загрузка страницы без P-JAX занимает 600-2500 мс, с P-JAX 100-300мс.
Также плюсом можно считать неизменность привычного workflow при работе с web-страницами: мы также собираем html на сервере и не задействуем большое количество JavaScript на клиенте.&lt;/p&gt;

&lt;p&gt;Можно отметить следующие минусы:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;увеличение количества кода и возможности ошибиться при обработке заголовков и в коде инициализации на клиенте&lt;/li&gt;
  &lt;li&gt;меньшая производительность относительно single-page клиентских фремворков (Angular, Ember, Backbone…)&lt;/li&gt;
  &lt;li&gt;меньшая или отсутствующая структуризация клиентского кода относительно single-page клиентских фремворков (Angular, Ember, Backbone…)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-2&quot;&gt;Ссылки&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/defunkt/jquery-pjax&quot;&gt;P-JAX плагин&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://pjax.heroku.com&quot;&gt;Приложение-пример P-JAX&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/pvillega/pjax-Forms&quot;&gt;Пример использования PJAX и Play&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Code quality tools in Scala projects</title>
   <link href="/code%20quality/2014/05/16/code-quality-tools-in-scala-projects"/>
   <updated>2014-05-16T00:00:00+04:00</updated>
   <id>/code%20quality/2014/05/16/code-quality-tools-in-scala-projects</id>
   <content type="html">
&lt;h2 id=&quot;scala&quot;&gt;Инструменты улучшения качества кода в проектах на Scala&lt;/h2&gt;

&lt;p&gt;Мы занимаемся разработкой на Scala уже порядка года и за это время накопили некоторый инструментарий, чтобы следить за качеством кода, который мы пишем.
В этой статье я постараюсь описать эти инструменты и как мы их используем.&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;Инструменты&lt;/h3&gt;

&lt;p&gt;На данный момет мы используем 3 инструмента:
1. Linter - производит статический анализатор кода;
2. ScalaStyle - производит анализ исходных кодов на предмет соответствия стандарту и прнципам написания кода;
3. JaCoCo - производит оценку покрытия кода тестами.&lt;/p&gt;

&lt;p&gt;Ссылки на инструменты приведены в &lt;a href=&quot;#links&quot;&gt;последнем разделе поста&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;linter&quot;&gt;Linter&lt;/h3&gt;

&lt;p&gt;linter был первым инструментом, который мы включили в проекты.
Да, сообщения scalac и sbt гораздо более информативны и полезны, чем сообщения javac и maven, однако они не позволяют отследить некоторые неприятные моменты в коде.
linter же позволяет отследить участки кода, возможно содержащие ошибки - например места в коде с использованием небезопасных сравнений.&lt;/p&gt;

&lt;p&gt;В итоге уже в первую неделю использования linter позволил вычистить большую часть базу кода от подобных опасных выражений и иcправить некоторые замаскированные баги.&lt;/p&gt;

&lt;h3 id=&quot;scalastyle&quot;&gt;ScalaStyle&lt;/h3&gt;

&lt;p&gt;ScalaStyle помогает нам следовать стандарту и рекомендациям написания кода на Scala. Это оптимизированный для Scala наследник CodeStyle, разработанного для Java.
После превой проверки кода мы получили огромное количество предупреждений - как безобидных, вроде превышения длины строки кода, так и более неприятных, например магических чисел в коде.
Отчасти в подобных результатах проверки виновата официальная документация PlayFramework, например &lt;a href=&quot;http://www.playframework.com/documentation/2.3.x/ScalaActions&quot;&gt;здесь&lt;/a&gt; не указываются возвращаемые типы для публичных методов.
Но всетаки большую часть ошибок в оформлении кода допустили мы сами.&lt;/p&gt;

&lt;p&gt;Теперь мы более внимательно следим за тем, как мы пишем, и ScalaStyle нам в этом помогает.&lt;/p&gt;

&lt;h3 id=&quot;jacoco&quot;&gt;JaCoCo&lt;/h3&gt;

&lt;p&gt;В сети доступно несколько вариантов со своими приемуществами и недостатками (например &lt;a href=&quot;http://mtkopone.github.io/scct/&quot;&gt;scct&lt;/a&gt;, &lt;a href=&quot;http://scoverage.org/&quot;&gt;scoverage&lt;/a&gt; ).
Мы остановились на JaCoCo по причине наличия плагина для Jenkins и удобной конфигурации.&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;Все в сборе&lt;/h3&gt;

&lt;p&gt;Чтобы можно было в любой момент получить отчет о результатах проверок кода проектов, мы внедрили процесс проверки в сборку проектов.
В качестве инструмента &lt;a href=&quot;http://ru.wikipedia.org/wiki/%D0%9D%D0%B5%D0%BF%D1%80%D0%B5%D1%80%D1%8B%D0%B2%D0%BD%D0%B0%D1%8F_%D0%B8%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D1%8F&quot;&gt;CI&lt;/a&gt; мы используем &lt;a href=&quot;&quot;&gt;Jenkins&lt;/a&gt;
После заливки изменнений в коде в центральный репозиторий Jenkins запускает тесты и отдельно запускает проверку стилистики кода, после чего производится сбор статистики и формирование графиков и таблиц.&lt;/p&gt;

&lt;p&gt;Статический анализ мы проводим при каждой сборке, как на сервере Jenkins, так и локально на разработческих машинах. Время компиляции увеличивается несущественно, а разработчик сразу получает полезную информацию.
Кроме того разработчик не забывает провести проверку перед отправкой кода в центральный репозиторий, например.&lt;/p&gt;

&lt;h3 id=&quot;a-namelinksa&quot;&gt;Полезные ссылки&lt;a name=&quot;links&quot;&gt;&lt;/a&gt;&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/HairyFotr/linter&quot;&gt;Linter&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.scalastyle.org/&quot;&gt;ScalaStyle&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.eclemma.org/jacoco/&quot;&gt;JaCoCo&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/sbt/jacoco4sbt&quot;&gt;JaCoCo sbt plugin&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://wiki.jenkins-ci.org/display/JENKINS/Checkstyle+Plugin&quot;&gt;Jenkins Checkstyle plugin&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://wiki.jenkins-ci.org/display/JENKINS/JaCoCo+Plugin&quot;&gt;Jenkins JaCoCo plugin&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Leverage browser caching</title>
   <link href="/play%20framework/2014/03/10/leverage-browser-caching"/>
   <updated>2014-03-10T00:00:00+04:00</updated>
   <id>/play%20framework/2014/03/10/leverage-browser-caching</id>
   <content type="html">
&lt;h3 id=&quot;section&quot;&gt;Увеличиваем время жизни кэша статитики в браузере&lt;/h3&gt;

&lt;p&gt;В качестве первого поста в нашем блоге, небольщой набросок от нашего верстальщика.&lt;/p&gt;

&lt;p&gt;В ходе разработки одной из систем с использованием связки Scala + Play framework 2.2.0, было проведено профилирование web-интерфейса, которое показало, что по умолчанию время жизни кэша статических ресурсов всего один час. Что негативно сказывалось на производительности интерфейса и, что больше всего расстраивало руководителей проекта - на индексах производительности выдаваемых сторонними системами профилирования.&lt;/p&gt;

&lt;p&gt;Как выяснилось, решение данного вопроса было довольно простым - добавление в конфигурацию проекта (application.conf) параметра
&lt;code&gt;assets.defaultCache=&quot;max-age=3600&quot;&lt;/code&gt;, где 3600 - время жизни кэша в секундах (в нашем случае, мы ствили неделю, т.е. 604800)&lt;/p&gt;

&lt;p&gt;В заключение, хочется отметить, что в документации на сайте Play Framework, для данной ситуации приводится параметр: http.cacheControl, что справедливо для Play версии 1. Для фреймворка версии 2 и выше, рекомендуется использовать параметр описанный нами выше.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://play.lighthouseapp.com/projects/82401/tickets/853-httpcachecontrol-property-has-no-effect&quot;&gt;Источник информации&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 
</feed>